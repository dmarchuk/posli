.box-sizing (@type: border-box) {
  -webkit-box-sizing: @type;
  -moz-box-sizing:    @type;
  box-sizing:         @type;
}

.transition (@value1,@value2:X,...)
{
  @value: ~`"@{arguments}".replace(/[\[\]]|\,\sX/g, '')`;

  -webkit-transition: @value;
  -moz-transition: @value;
  -ms-transition: @value;
  -o-transition: @value;
  transition: @value;
}

.border-radius (@radius) {
  -webkit-border-radius: @radius;
  -moz-border-radius:    @radius;
  border-radius:         @radius;
  -moz-background-clip:    padding;
  -webkit-background-clip: padding-box;
  background-clip:         padding-box;
}

.box-shadow (@string) {
  -webkit-box-shadow: @string;
  -moz-box-shadow:    @string;
  box-shadow:         @string;
}

.transformTranslate (@translate) {
  -webkit-transform: translate(0, @translate);
  -moz-transform: translate(0, @translate);
  -o-transform: translate(0, @translate);
  -ms-transform: translate(0, @translate);
  transform: translate(0, @translate);
}

.animation-duration(@duration) {
  -webkit-animation-duration: @duration;
  -moz-animation-duration: @duration;
  -o-animation-duration: @duration;
  animation-duration: @duration;
}

.colormixin(@color:false) when not (@color=false){color: @color;}
.stylemixin(@style:false) when not (@style=false){
  .style(@style) when (@style=italic) {font-style: @style;}
  .style(@style) when (@style=bold) {font-weight: @style;}
  .style(@style);
}

.placeholder(@color: false, @style: false){
  &::-webkit-input-placeholder {
    .colormixin(@color);
    .stylemixin(@style);
  }
  &:-moz-placeholder {
    .colormixin(@color);
    .stylemixin(@style);
  }
  &::-moz-placeholder {
    .colormixin(@color);
    .stylemixin(@style);
  }
  &:-ms-input-placeholder {
    .colormixin(@color);
    .stylemixin(@style);
  }
}